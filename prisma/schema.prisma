// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @unique @default(cuid())
  username  String    @unique
  fullName  String?   @default("")
  email     String    @unique
  password  String?
  posts     Post[]    @relation("PostAuthor")
  comments  Comment[] @relation("CommentAuthor")
  createdAt DateTime  @default(now()) @db.Timestamptz(3)
  updatedAt DateTime  @updatedAt @db.Timestamptz(3)
}

model Post {
  post_id   String    @id @default(cuid())
  title     String    @db.VarChar(200)
  content   String
  author    User      @relation("PostAuthor", fields: [authorId], references: [id])
  authorId  String
  comments  Comment[] @relation("PostComments")
  createdAt DateTime  @default(now()) @db.Timestamptz(3)
  updatedAt DateTime  @updatedAt @db.Timestamptz(3)
}

model Comment {
  comment_id     String   @id @default(cuid())
  commentContent String?  @default("") @db.VarChar(200)
  author         User     @relation("CommentAuthor", fields: [authorId], references: [id], onDelete: Cascade)
  authorId       String
  post           Post     @relation("PostComments", fields: [post_id], references: [post_id], onDelete: Cascade)
  post_id        String
  createdAt      DateTime @default(now()) @db.Timestamptz(3)
  updatedAt      DateTime @updatedAt @db.Timestamptz(3)
}
